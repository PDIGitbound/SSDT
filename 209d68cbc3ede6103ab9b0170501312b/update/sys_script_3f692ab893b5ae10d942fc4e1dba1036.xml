<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>cmn_location</collection>
        <condition>current.latitude &amp;&amp; current.longitude &amp;&amp; !current.street</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="cmn_location">sys_created_onONToday@javascript:gs.beginningOfToday()@javascript:gs.endOfToday()^EQ<item endquery="false" field="sys_created_on" goto="false" newquery="false" operator="ON" or="false" value="Today@javascript:gs.beginningOfToday()@javascript:gs.endOfToday()"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Auto-Fill Location Address</name>
        <order>1</order>
        <priority>1</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    if (current.latitude && current.longitude) {
		gs.info("Testing_1");
        var result = new LocationUtils().reverseGeocode(current.latitude, current.longitude);

        if (result) {
			gs.info("Testing_2");
            current.name = result.name || (result.city + ', ' + result.state); // fallback
            current.street = result.street;
            current.city = result.city;
            current.state = result.state;
            current.zip = result.postal_code;
            current.update();
        }
    }
	gs.info("Testing_3");
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>josepablo.lopez</sys_created_by>
        <sys_created_on>2025-05-26 16:56:42</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3f692ab893b5ae10d942fc4e1dba1036</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Auto-Fill Location Address</sys_name>
        <sys_overrides/>
        <sys_package display_value="GitHub SSDT" source="x_volt2_github_s_0">209d68cbc3ede6103ab9b0170501312b</sys_package>
        <sys_policy/>
        <sys_scope display_value="GitHub SSDT">209d68cbc3ede6103ab9b0170501312b</sys_scope>
        <sys_update_name>sys_script_3f692ab893b5ae10d942fc4e1dba1036</sys_update_name>
        <sys_updated_by>josepablo.lopez</sys_updated_by>
        <sys_updated_on>2025-05-26 21:28:48</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3f692ab893b5ae10d942fc4e1dba1036"/>
</record_update>
