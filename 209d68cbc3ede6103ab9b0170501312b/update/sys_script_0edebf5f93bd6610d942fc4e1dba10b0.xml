<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>wm_order</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="wm_order">state=3^EQ<item display_value="Closed Complete" endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="3"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>changeOTIncidentStateToResolved</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var parentId = current.parent + ''; // sys_id del OTI

    var otGR = new GlideRecord('sn_ot_incident');
    if (otGR.get(parentId)) {


		otGR.close_code = 'Solution provided';



        // Ahora sí podemos cambiar el estado del OTI
        otGR.state = '3'; // Complete / Resolved
        otGR.update();

        // // Buscar el único registro relacionado en Affected OT Devices
        // var affectedCI = new GlideRecord('task_ci');
        // affectedCI.addQuery('task', otGR.sys_id);
        // affectedCI.setLimit(1); // Asumimos solo uno
        // affectedCI.query();

        // if (affectedCI.next()) {
        //     // Si no tiene asset_action, lo establecemos
        //     if (!affectedCI.asset_action) {
        //         affectedCI.asset_action = 'no_action'; // O 'repaired', 'replaced', etc.
        //         affectedCI.update();
        //     }
        // }

    }


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>carlos.salcido</sys_created_by>
        <sys_created_on>2025-06-03 17:50:16</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>0edebf5f93bd6610d942fc4e1dba10b0</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>changeOTIncidentStateToResolved</sys_name>
        <sys_overrides/>
        <sys_package display_value="GitHub SSDT" source="x_volt2_github_s_0">209d68cbc3ede6103ab9b0170501312b</sys_package>
        <sys_policy/>
        <sys_scope display_value="GitHub SSDT">209d68cbc3ede6103ab9b0170501312b</sys_scope>
        <sys_update_name>sys_script_0edebf5f93bd6610d942fc4e1dba10b0</sys_update_name>
        <sys_updated_by>carlos.salcido</sys_updated_by>
        <sys_updated_on>2025-06-04 21:15:25</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=0edebf5f93bd6610d942fc4e1dba10b0"/>
</record_update>
