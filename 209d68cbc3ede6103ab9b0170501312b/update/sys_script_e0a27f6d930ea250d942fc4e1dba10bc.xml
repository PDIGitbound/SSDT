<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>wm_task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Auto Assign Agent</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    // Llamar al auto-dispatch
    var returnValue = new SMAutoAssignment().autodispatch(current);

    // Verifica si el plugin de geolocalización está activo y bien configurado
    var geoLocationActive = GlidePluginManager.isActive("com.snc.geolocation");
    var useGeoLocation = gs.getProperty("work.management.autodispatch.geolocation");

    if (
        geoLocationActive &&
        useGeoLocation == "true" &&
        !(new SNC.GeoLocation()).hasValidGoogleClient() &&
        !(new SNC.GeoLocation()).hasValidGoogleApiKey()
    ) {
        gs.addErrorMessage(new DynamicSchedulingAgentRecommendationUtil().INVALID_GOOGLE_KEY);
    }

    // Registrar mensajes según el resultado
    if (returnValue.startsWith("info")) {
        gs.addInfoMessage(returnValue.substring(4));
    } else if (returnValue.startsWith("error")) {
        gs.addErrorMessage(returnValue.substring(5));
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>carlos.salcido</sys_created_by>
        <sys_created_on>2025-06-10 16:38:34</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e0a27f6d930ea250d942fc4e1dba10bc</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Auto Assign Agent</sys_name>
        <sys_overrides/>
        <sys_package display_value="GitHub SSDT" source="x_volt2_github_s_0">209d68cbc3ede6103ab9b0170501312b</sys_package>
        <sys_policy/>
        <sys_scope display_value="GitHub SSDT">209d68cbc3ede6103ab9b0170501312b</sys_scope>
        <sys_update_name>sys_script_e0a27f6d930ea250d942fc4e1dba10bc</sys_update_name>
        <sys_updated_by>carlos.salcido</sys_updated_by>
        <sys_updated_on>2025-06-10 20:40:41</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e0a27f6d930ea250d942fc4e1dba10bc"/>
</record_update>
